{"version":3,"sources":["Components/Operations.js","Components/CardOperation.js","Components/Answer.js","Components/Menu.js","Components/Game.js","App.js","serviceWorker.js","index.js"],"names":["generateNumber","difficulty","Math","ceil","random","createOperation","_ref","symbol","evaluation","key","answer","param","Array","fill","map","sort","a","b","apply","Object","toConsumableArray","Operation","_ref2","multiplication","this","operations","method","methods","keys","randomKey","floor","length","selectRandomMethod","division","sum","sub","maxCardSize","minHeight","CardOpertation","props","style","localHeight","movingDown","totalHeight","totalOperations","operationCards","op","pos","texContent","concat","modifier","color","height","fontSize","transition","transform","react_default","createElement","className","containerStyle","Answer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","e","setState","target","onSuccess","type","onChange","Component","Menu","handleTransitionEnd","handleClick","fade","_this2","setTimeout","arguments","undefined","startGame","generateGame","_this3","score","console","log","onTransitionEnd","onClick","keyCounter","Game","createNewOperation","startCounter","handleLose","getStartingState","isPlaying","maxScore","localStorage","getItem","initialOperations","i","operation","generateOperation","push","activeOperation","delay","timeLeft","isCounting","lastTime","Date","getTime","timeCounter","setInterval","time","step","clearInterval","setItem","_this$state","newOperations","slice","_this$state2","newScore","_this$state3","Components_Menu","CardOperation","Components_Answer","toString","App","Components_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5ed5c0f.chunk.js","sourcesContent":["function generateNumber(difficulty) {\r\n    return Math.ceil(Math.random() * 5 * difficulty) + 1;\r\n}\r\n\r\nfunction createOperation({ symbol, evaluation }) {\r\n    return (difficulty, key) => {\r\n        let answer, param;\r\n        do {\r\n            param = Array(2)\r\n                .fill(null)\r\n                .map(() => generateNumber(difficulty))\r\n                .sort((a, b) => b - a);\r\n            answer = evaluation(...param);\r\n        } while ((answer % 1) !== 0);\r\n        return { symbol: symbol, param: param, answer: answer, key: key }\r\n    }\r\n}\r\n\r\nfunction selectRandomMethod(methods) {\r\n    let keys = Object.keys(methods);\r\n    let randomKey = Math.floor(Math.random() * keys.length)\r\n    let method = (randomKey === keys.length) ? methods[keys[0]] : methods[keys[randomKey]];\r\n    return method;\r\n}\r\nclass Operation {\r\n    static operations = {\r\n        division: createOperation({\r\n            symbol: '/',\r\n            evaluation: (a, b) => a / b\r\n        }),\r\n        multiplication: createOperation({\r\n            symbol: '*',\r\n            evaluation: (a, b) => a * b\r\n        }),\r\n        sum: createOperation({\r\n            symbol: '+',\r\n            evaluation: (a, b) => a + b\r\n        }),\r\n        sub: createOperation({\r\n            symbol: '-',\r\n            evaluation: (a, b) => a - b\r\n        })\r\n    }\r\n    static generateOperation({ key, difficulty }) {\r\n        let { multiplication } = this.operations;\r\n        let method = selectRandomMethod(this.operations);\r\n        if (method === multiplication)\r\n            difficulty = difficulty / 2;\r\n        return method(difficulty, key);\r\n    }\r\n}\r\n\r\n\r\nexport default Operation","import React from 'react'\r\n\r\n\r\nconst maxCardSize = 100,\r\n    minHeight = 20;\r\n\r\nfunction CardOpertation(props) {\r\n    let { operations, movingDown } = props;\r\n    let style, localHeight, totalHeight = 0;\r\n    let totalOperations = operations.length - 1;\r\n\r\n    let operationCards = operations.map((op, pos) => {\r\n        let { symbol, param, key } = op;\r\n\r\n        let texContent = `${param[0]} ${symbol} ${param[1]}`;\r\n        totalHeight += maxCardSize * pos / totalOperations + minHeight;\r\n\r\n        if (movingDown) {\r\n            let modifier = (pos + 1) / totalOperations;\r\n            localHeight = maxCardSize * modifier + minHeight;\r\n            style = {\r\n                color: `rgba(255,255,255,${modifier * .9 + .1})`,\r\n                height: `${localHeight}px`,\r\n                fontSize: `${modifier * 2 + .1}em`,\r\n                transition: 'all .2s',\r\n                transform: `translateY(0)`\r\n            }\r\n        } else {\r\n            let modifier = pos / totalOperations\r\n            localHeight = maxCardSize * modifier + minHeight;\r\n            style = {\r\n                color: `rgba(255,255,255,${modifier * .9 + .1})`,\r\n                height: `${localHeight}px`,\r\n                fontSize: `${modifier * 2 + .1}em`,\r\n                transition: `none`,\r\n                transform: `translateY(-${minHeight}px)`\r\n            }\r\n\r\n        }\r\n        return (\r\n            <div className='card' key={key} style={style}>\r\n                <span>{texContent}</span>\r\n            </div>\r\n        )\r\n    })\r\n    let containerStyle = {\r\n        height: `${totalHeight}px`\r\n    }\r\n    return (\r\n        <div className='cardContainer' style={containerStyle} >\r\n            {operationCards}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CardOpertation","import React, { Component } from 'react'\r\n\r\nclass Answer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            answer: this.props.answer\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n        if (e.target.value === this.props.answer) {\r\n            this.props.onSuccess();\r\n            this.setState({\r\n                value: ''\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <input className={'inputAnswer'} type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Answer","import React, { Component } from 'react'\r\n\r\n// function Menu(props) {\r\n//     let { score } = props;\r\n//     let menu;\r\n//     if (score === 0) {\r\n//         menu = (\r\n//             <div className='menu' >\r\n//                 <div className=\"menu__textContainer\" >\r\n//                     <h2 className=\"menu__title\" > Matemagico </h2>\r\n//                     <h3 className=\"menu__sub\" > Bienvenido </h3>\r\n//                 </div>\r\n//                 <div className=\"menu__buttons\" >\r\n//                     <span className=\"menu__startButton\" onClick={props.generateGame} > Comenzar </span>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     } else {\r\n//         menu = (\r\n//             <div className='menu' >\r\n//                 <div className=\"menu__textContainer\" >\r\n//                     <h2 className=\"menu__title\" > Matemagico </h2>\r\n//                     <span className='menu__sub'> Tu puntaje fue de {score} </span>\r\n//                 </div>\r\n//                 <div className=\"menu__buttons\" >\r\n//                     <span className=\"menu__startButton\" onClick={props.generateGame} > Jugar de nuevo </span>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n//     return menu\r\n// }\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        this.state = {\r\n            fade: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() =>\r\n            this.setState({\r\n                fade: true\r\n            }), 0)\r\n\r\n    }\r\n    handleTransitionEnd(generate = true) {\r\n        if (this.state.fade === false) {\r\n            this.props.startGame();\r\n            this.setState({\r\n                fade: true\r\n            })\r\n        }\r\n    }\r\n    handleClick() {\r\n        this.setState({\r\n            fade: false\r\n        })\r\n        this.props.generateGame()\r\n    }\r\n\r\n    render() {\r\n        let menu, { score } = this.props;\r\n        let className = 'menu ' + (this.state.fade ? 'menu__fade' : '');\r\n        console.log(className);\r\n        if (score === 0) {\r\n            menu = (\r\n                <div className={className} onTransitionEnd={() => this.handleTransitionEnd(false)}>\r\n                    <div className=\"menu__textContainer\" >\r\n                        <h2 className=\"menu__title\" > Matemagico </h2>\r\n                        <h3 className=\"menu__sub\" > Bienvenido </h3>\r\n                    </div>\r\n                    <div className=\"menu__buttons\" >\r\n                        <span className=\"menu__startButton\" onClick={this.handleClick} > Comenzar </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            menu = (\r\n                <div className={className} onTransitionEnd={() => this.handleTransitionEnd(true)}>\r\n                    <div className=\"menu__textContainer\" >\r\n                        <h2 className=\"menu__title\" > Matemagico </h2>\r\n                        <span className='menu__sub'> Tu puntaje fue de {score} </span>\r\n                    </div>\r\n                    <div className=\"menu__buttons\" >\r\n                        <span className=\"menu__startButton\" onClick={this.handleClick} > Jugar de nuevo </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return menu\r\n    }\r\n}\r\n\r\n\r\nexport default Menu","import React, { Component } from 'react';\r\nimport Operation from './Operations';\r\nimport CardOperation from './CardOperation'\r\nimport Answer from './Answer'\r\nimport Menu from './Menu'\r\n\r\nconst maxOperations = 6,\r\n    difficultyModifier = 0.15;\r\nlet keyCounter = 0;\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.createNewOperation = this.createNewOperation.bind(this);\r\n        this.startCounter = this.startCounter.bind(this);\r\n        this.handleLose = this.handleLose.bind(this);\r\n        this.getStartingState = this.getStartingState.bind(this);\r\n        this.generateGame = this.generateGame.bind(this);\r\n        this.startGame = this.startGame.bind(this);\r\n\r\n        this.state = this.getStartingState();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isPlaying: false,\r\n            maxScore: localStorage.getItem('maxScore') || 0\r\n        })\r\n    }\r\n\r\n    getStartingState(difficulty = 1) {\r\n        let initialOperations = [];\r\n        for (let i = 0; i < maxOperations; i++) {\r\n            let operation = Operation.generateOperation({ key: keyCounter++, difficulty: difficulty });\r\n            initialOperations.push(operation);\r\n        }\r\n        return {\r\n            operations: initialOperations,\r\n            movingDown: false,\r\n            difficulty: difficulty,\r\n            activeOperation: initialOperations[initialOperations.length - 1],\r\n            delay: 1,\r\n            timeLeft: 5000,\r\n            score: 0,\r\n            isPlaying: false,\r\n            isCounting: false\r\n        }\r\n    }\r\n\r\n    startCounter() {\r\n        let lastTime = (new Date()).getTime();\r\n        this.setState({\r\n            isCounting: true\r\n        })\r\n        let timeCounter = setInterval(() => {\r\n            let time = (new Date()).getTime()\r\n            let step = time - lastTime;\r\n            let timeLeft = this.state.timeLeft - step;\r\n            if (timeLeft < 0) {\r\n                this.handleLose();\r\n                clearInterval(timeCounter);\r\n                timeLeft = 0;\r\n            }\r\n            this.setState(() => {\r\n                return {\r\n                    timeLeft: timeLeft\r\n                }\r\n            })\r\n            lastTime = time;\r\n        }, 100)\r\n    }\r\n    handleLose() {\r\n        let { maxScore } = this.state;\r\n        this.setState({\r\n            isPlaying: false\r\n        })\r\n        if (maxScore > localStorage.getItem('maxScore')) {\r\n            localStorage.setItem('maxScore', maxScore)\r\n        }\r\n    }\r\n    createNewOperation() {\r\n        let { delay, difficulty, operations } = this.state;\r\n        let newOperation = Operation.generateOperation({ key: keyCounter++, difficulty: difficulty });\r\n        let newOperations = [newOperation, ...operations].slice(0, maxOperations);\r\n        this.setState({\r\n            operations: newOperations,\r\n            difficulty: difficulty + difficultyModifier,\r\n            movingDown: false,\r\n            delay: delay - 1\r\n        })\r\n    }\r\n    onSuccess() {\r\n        let { operations, delay, timeLeft, score, maxScore, isCounting } = this.state;\r\n        let newScore = score + 20;\r\n        if (newScore > maxScore) {\r\n            maxScore = newScore;\r\n        }\r\n        if (!isCounting) {\r\n            this.startCounter();\r\n        }\r\n        this.setState({\r\n            movingDown: true,\r\n            activeOperation: operations[operations.length - delay - 1],\r\n            delay: delay + 1,\r\n            timeLeft: timeLeft + 1000,\r\n            score: newScore,\r\n            maxScore: maxScore\r\n        })\r\n        setTimeout(() => {\r\n            this.createNewOperation()\r\n        }, 200);\r\n    }\r\n\r\n    generateGame() {\r\n        this.setState(this.getStartingState());\r\n    }\r\n\r\n    startGame() {\r\n        this.setState({\r\n            isPlaying: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { operations, movingDown, activeOperation, timeLeft, isPlaying, score, maxScore } = this.state;\r\n        let time = Math.ceil(timeLeft / 1000);\r\n        return (\r\n            <div className='container'>\r\n                {!isPlaying ? (\r\n                    <Menu isPlaying={isPlaying} score={score} generateGame={this.generateGame} startGame={this.startGame} />\r\n                ) : (null)}\r\n                <div className=\"gameContainer\">\r\n                    <div className=\"time-left\">\r\n                        <div className=\"stats__container\">\r\n                            <span className=\"stats__sub\">Time left</span>\r\n                            <span className=\"stats__main\">{time}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"score\">\r\n                        <div className=\"stats__container\">\r\n                            <span className=\"stats__sub\">Max score</span>\r\n                            <span className=\"stats__main\">{maxScore}</span>\r\n                        </div>\r\n                        <div className=\"stats__container\">\r\n                            <span className=\"stats__sub\">Score</span>\r\n                            <span className=\"stats__main\">{score}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"game__content\">\r\n                        <CardOperation operations={operations} movingDown={movingDown} />\r\n                        <Answer answer={activeOperation.answer.toString()} onSuccess={this.onSuccess} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Game","import React from 'react';\nimport Game from './Components/Game';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}